-- New script in localhost 4.
-- Connection Type: dev 
-- Url: jdbc:oracle:thin:@//localhost:1521/XE
-- workspace : H:\workspace\multi\04_db
-- Date: 2024. 5. 17.
-- Time: 오후 4:51:53

-- 2. EMPLOYEE_ID70년대 생이면서 성별이 여자이고,
--    성이 Cambrault씨인 직원들의 사원명, 사원번호 , 부서명, 직급명을 조회하시오.
-- ANSI 표준
SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;
SELECT * FROM JOBS;
SELECT FIRST_NAME || ' ' || LAST_NAME AS 사원명,
	   EMPLOYEE_ID AS 사원번호,
	   B.DEPARTMENT_NAME AS 부서명,
	   C.JOB_TITLE AS 직급명
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
LEFT JOIN JOBS C ON A.JOB_ID = C.JOB_ID
WHERE LAST_NAME = 'Cambrault';



-- 3. 가장 급여가 적은 직원의 사번, 사원명,
--    SAL, 부서명, 직급명을 조회하시오.
-- ANSI 표준
SELECT EMPLOYEE_ID 사번,
		FIRST_NAME || ' ' || LAST_NAME 사원명,
		SALARY AS SAL,
		B.DEPARTMENT_NAME AS 부서명,
		C.JOB_TITLE AS 직급명
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
LEFT JOIN JOBS C ON A.JOB_ID = C.JOB_ID
WHERE SALARY = (SELECT MIN(SALARY) FROM EMPLOYEES);



-- 4. 이름에 'sa'자가 들어가는 직원들의
-- 사번, 사원명, 부서명을 조회하시오.
-- ANSI 표준
SELECT EMPLOYEE_ID 사번,
		FIRST_NAME || ' ' || LAST_NAME 사원명,
		B.DEPARTMENT_NAME AS 부서명
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
WHERE LOWER(FIRST_NAME) LIKE '%sa%' OR LOWER(LAST_NAME) LIKE '%sa%';




-- 5. IT팀에 근무하는 사원명,
--    직급명, 부서코드, 부서명을 조회하시오.
-- ANSI표준
SELECT FIRST_NAME || ' ' || LAST_NAME 사원명,
		C.JOB_TITLE 직급명,
		B.DEPARTMENT_ID 부서코드,
		B.DEPARTMENT_NAME 부서명
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
LEFT JOIN JOBS C ON A.JOB_ID = C.JOB_ID
WHERE B.DEPARTMENT_NAME = 'IT';

SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;
SELECT * FROM JOBS;
SELECT * FROM LOCATIONS;

-- 6. COMMISSION_PCT 를 받는 직원들의 사원명,
--    COMMISSION_PCT , 부서명, 근무지역명을 조회하시오.
-- ANSI표준
-- ANSI 표준
SELECT FIRST_NAME || ' ' || LAST_NAME 사원명, 
		COMMISSION_PCT,
		B.DEPARTMENT_NAME 부서명,
		D.CITY  근무지역명
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
LEFT JOIN JOBS C ON A.JOB_ID = C.JOB_ID
LEFT JOIN LOCATIONS D ON B.LOCATION_ID = D.LOCATION_ID
WHERE A.COMMISSION_PCT >0;

-- 7. 부서코드가 10인 직원들의 사원명,
--    직급명, 부서명, 근무지역명을 조회하시오.
-- ANSI 표준
SELECT FIRST_NAME || ' ' || LAST_NAME 사원명, 
		C.JOB_TITLE 직급명,
		B.DEPARTMENT_NAME 부서명,
		D.CITY  근무지역명
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
LEFT JOIN JOBS C ON A.JOB_ID = C.JOB_ID
LEFT JOIN LOCATIONS D ON B.LOCATION_ID = D.LOCATION_ID
WHERE A.DEPARTMENT_ID = 10;

SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;
SELECT * FROM JOBS;
SELECT * FROM LOCATIONS;

-- 8.United States of America(US) Canada(CA)에 근무하는 직원들의
--    사원명, 부서명, 지역명, 국가명을 조회하시오.
-- ANSI 표준
SELECT FIRST_NAME || ' ' || LAST_NAME 사원명, 
		B.DEPARTMENT_NAME 부서명,
		D.CITY  근무지역명,
		D.COUNTRY_ID
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
LEFT JOIN JOBS C ON A.JOB_ID = C.JOB_ID
LEFT JOIN LOCATIONS D ON B.LOCATION_ID = D.LOCATION_ID
WHERE D.COUNTRY_ID = 'US' OR D.COUNTRY_ID = 'CA';

-- 9. 같은 부서에 근무하는 직원들의 사원명, 부서코드,
--     동료이름을 조회하시오.self join 사용
-- ANSI 표준
SELECT 
B.FIRST_NAME || ' ' || B.LAST_NAME 내이름,
A.FIRST_NAME || ' ' || A.LAST_NAME 동료명,
B.DEPARTMENT_ID 부서코드
FROM EMPLOYEES A, EMPLOYEES B
WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID ;


-- 10. COMMISSION_PCT가 없는 직원들 중에서 직급코드가
--     FI_ACCOUNT와 IT_PROG인 직원들의 사원명, 직급명, 급여를 조회하시오.
--     단, join과 IN 사용할 것
-- ANSI 표준
