-- New script in localhost 3.
-- Connection Type: dev 
-- Url: jdbc:oracle:thin:@//localhost:1521/XE
-- workspace : H:\workspace\multi\04_db
-- Date: 2024. 6. 11.
-- Time: 오후 2:29:06



-- ----oracle 버전 menu -스프링부트시 
-- 시퀀스 생성
DROP SEQUENCE SEQ_CATEGORY_CODE;
DROP SEQUENCE SEQ_MENU_CODE;

CREATE SEQUENCE SEQ_CATEGORY_CODE;
CREATE SEQUENCE SEQ_MENU_CODE;

-- 테이블 생성
DROP TABLE tbl_category CASCADE CONSTRAINTS;
DROP TABLE tbl_menu CASCADE CONSTRAINTS;

SELECT * FROM TBL_CATEGORY;
SELECT * FROM TBL_MENU;

-- category 테이블 생성
CREATE TABLE tbl_category
(
    category_code    NUMBER NOT NULL,
    category_name    VARCHAR2(30) NOT NULL,
    ref_category_code    NUMBER
);

COMMENT ON COLUMN tbl_category.category_code IS '카테고리코드';
COMMENT ON COLUMN tbl_category.category_name IS '카테고리명';
COMMENT ON COLUMN tbl_category.ref_category_code IS '상위카테고리코드';
COMMENT ON TABLE tbl_category IS '카테고리';

CREATE UNIQUE INDEX index_category_code ON tbl_category
( category_code );

ALTER TABLE tbl_category
 ADD CONSTRAINT pk_category_code PRIMARY KEY ( category_code )
 USING INDEX index_category_code;

ALTER TABLE tbl_category
 ADD CONSTRAINT fk_ref_category_code FOREIGN KEY ( ref_category_code )
 REFERENCES tbl_category ( category_code);

CREATE TABLE tbl_menu
(
    menu_code    NUMBER NOT NULL,
    menu_name    VARCHAR2(30) NOT NULL,
    menu_price    NUMBER NOT NULL,
    category_code    NUMBER NOT NULL,
    orderable_status    CHAR(1) NOT NULL
);

COMMENT ON COLUMN tbl_menu.menu_code IS '메뉴코드';
COMMENT ON COLUMN tbl_menu.menu_name IS '메뉴명';
COMMENT ON COLUMN tbl_menu.menu_price IS '메뉴가격';
COMMENT ON COLUMN tbl_menu.category_code IS '카테고리코드';
COMMENT ON COLUMN tbl_menu.orderable_status IS '주문가능상태';
COMMENT ON TABLE tbl_menu IS '메뉴';

CREATE UNIQUE INDEX index_menu_code ON tbl_menu
( menu_code );

ALTER TABLE tbl_menu
 ADD CONSTRAINT pk_menu_code PRIMARY KEY ( menu_code )
 USING INDEX index_menu_code;

ALTER TABLE tbl_menu
 ADD CONSTRAINT fk_category_code FOREIGN KEY ( category_code )
 REFERENCES tbl_category ( category_code );

INSERT INTO TBL_CATEGORY VALUES (SEQ_CATEGORY_CODE.NEXTVAL, '식사', null);
INSERT INTO TBL_CATEGORY VALUES (SEQ_CATEGORY_CODE.NEXTVAL, '음료', null);
INSERT INTO TBL_CATEGORY VALUES (SEQ_CATEGORY_CODE.NEXTVAL, '디저트', null);
INSERT INTO TBL_CATEGORY VALUES (SEQ_CATEGORY_CODE.NEXTVAL, '한식', 1);
INSERT INTO TBL_CATEGORY VALUES (SEQ_CATEGORY_CODE.NEXTVAL, '중식', 1);

INSERT INTO TBL_CATEGORY VALUES (SEQ_CATEGORY_CODE.NEXTVAL, '일식', 1);
INSERT INTO TBL_CATEGORY VALUES (SEQ_CATEGORY_CODE.NEXTVAL, '퓨전', 1);
INSERT INTO TBL_CATEGORY VALUES (SEQ_CATEGORY_CODE.NEXTVAL, '커피', 2);
INSERT INTO TBL_CATEGORY VALUES (SEQ_CATEGORY_CODE.NEXTVAL, '쥬스', 2);
INSERT INTO TBL_CATEGORY VALUES (SEQ_CATEGORY_CODE.NEXTVAL, '기타', 2);

INSERT INTO TBL_CATEGORY VALUES (SEQ_CATEGORY_CODE.NEXTVAL, '동양', 3);
INSERT INTO TBL_CATEGORY VALUES (SEQ_CATEGORY_CODE.NEXTVAL, '서양', 3);

INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '바닐라라떼', 4500, 8, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '딸기스무디', 5000, 10, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '밀크쉐이크', 6000, 10, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '파르페', 7000, 10, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '김치찜', 13000, 4, 'Y');

INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '샐러드', 12000, 4, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '미역국', 15000, 4, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '한우국밥', 20000, 4, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '마카롱', 9000, 12, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '마늘빵', 7000, 12, 'Y');

INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '인절미빙수', 10000, 10, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '스크류바', 2000, 10, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '딸기젤라또', 8000, 12, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '커틀릿', 13000, 6, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '튀김우동', 11000, 6, 'Y');

INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '아메리카노', 9000, 8, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '붕어빵초밥', 35000, 6, 'Y');
INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '코코넛쥬스', 9000, 9, 'Y');

INSERT INTO TBL_MENU VALUES (SEQ_MENU_CODE.NEXTVAL, '백설기', 5000, 11, 'Y');

COMMIT;









-- SEQUENCE DROP
DROP SEQUENCE SEQ_MEMBER_NO;
DROP SEQUENCE SEQ_AUTHORITY_CODE;
DROP SEQUENCE SEQ_MENU_CODE;
DROP SEQUENCE SEQ_LOGIN_LOG_NO;
DROP SEQUENCE SEQ_LOGIN_FAILED_NO;
DROP SEQUENCE SEQ_CHANGED_PWD_LOG_NO;

-- SEQUENCE CREATE
CREATE SEQUENCE SEQ_MEMBER_NO;
CREATE SEQUENCE SEQ_AUTHORITY_CODE;
CREATE SEQUENCE SEQ_MENU_CODE;
CREATE SEQUENCE SEQ_LOGIN_LOG_NO;
CREATE SEQUENCE SEQ_LOGIN_FAILED_NO;
CREATE SEQUENCE SEQ_CHANGED_PWD_LOG_NO;

-- TABLE DROP
DROP TABLE TBL_GLOBAL_MENU CASCADE CONSTRAINTS;
DROP TABLE TBL_AUTHENTICATED_MENU CASCADE CONSTRAINTS;
DROP TABLE TBL_MEMBER_ROLE CASCADE CONSTRAINTS;
DROP TABLE TBL_AUTHORITY CASCADE CONSTRAINTS;
DROP TABLE TBL_CHANGED_PWD_LOG CASCADE CONSTRAINTS;
DROP TABLE TBL_LOGIN_FAILED_LOG CASCADE CONSTRAINTS;
DROP TABLE TBL_LOGIN_LOG CASCADE CONSTRAINTS;
DROP TABLE TBL_MEMBER CASCADE CONSTRAINTS;


-- TABLE CREATE
CREATE TABLE TBL_AUTHENTICATED_MENU
(
    AUTHORITY_CODE    NUMBER NOT NULL,
    MENU_CODE    NUMBER NOT NULL
);


CREATE TABLE TBL_AUTHORITY
(
    AUTHORITY_CODE    NUMBER NOT NULL,
    AUTHORITY_NAME    VARCHAR2(255) NOT NULL,
    AUTHORITY_DESC    VARCHAR2(4000) NOT NULL
);


CREATE TABLE TBL_CHANGED_PWD_LOG
(
    CHANGED_PWD_LOG_NO    NUMBER NOT NULL,
    MEMBER_NO    NUMBER NOT NULL,
    BEFORE_CHANGED_PWD    CHAR(60) NOT NULL,
    CHANGED_PWD_DATE    CHAR(8) NOT NULL
);


CREATE TABLE TBL_GLOBAL_MENU
(
    MENU_CODE    NUMBER NOT NULL,
    MENU_NAME    VARCHAR2(255) NOT NULL,
    MENU_URL    VARCHAR2(255) NOT NULL,
    MENU_DESC    VARCHAR2(4000) NOT NULL,
    MENU_ORDER    NUMBER NOT NULL,
    REMOVED_YN    CHAR(1) DEFAULT 'N' NOT NULL,
    MENU_TYPE    NUMBER NOT NULL,
    REF_MENU_CODE    NUMBER
);


CREATE TABLE TBL_LOGIN_FAILED_LOG
(
    LOGIN_FAILED_LOG_NO    NUMBER NOT NULL,
    MEMBER_NO    NUMBER NOT NULL,
    LOGIN_FAILED_DATETIME    TIMESTAMP NOT NULL,
    LOGIN_TRIED_IP    CHAR(15) NOT NULL,
    LOGIN_FAILED_REASON    VARCHAR2(255) NOT NULL
);


CREATE TABLE TBL_LOGIN_LOG
(
    LOGIN_LOG_NO    NUMBER NOT NULL,
    MEMBER_NO    NUMBER NOT NULL,
    LOGIN_DATETIME    TIMESTAMP NOT NULL,
    LOGIN_IP    CHAR(15) NOT NULL,
    REFERER_URL    VARCHAR2(255) NOT NULL
);


CREATE TABLE TBL_MEMBER
(
    MEMBER_NO    NUMBER NOT NULL,
    MEMBER_ID    VARCHAR2(20) NOT NULL,
    MEMBER_PWD    CHAR(60) NOT NULL,
    TEMP_PWD_YN    CHAR(1) DEFAULT 'N' NOT NULL,
    PWD_CHANGED_DATETIME    DATE DEFAULT SYSDATE NOT NULL,
    PWD_EXP_DATE    DATE DEFAULT ADD_MONTHS(SYSDATE, 3) NOT NULL,
    MEMBER_NAME    VARCHAR2(20) NOT NULL,
    MEMBER_REGIST_DATETIME    DATE DEFAULT SYSDATE NOT NULL,
    ACCUM_LOGIN_COUNT    NUMBER DEFAULT 0 NOT NULL,
    LOGIN_FAILED_COUNT    NUMBER DEFAULT 0 NOT NULL,
    ACC_LOCK_YN    CHAR(1) DEFAULT 'N' NOT NULL,
    ACC_INACTIVE_YN    CHAR(1) DEFAULT 'N' NOT NULL,
    ACC_EXP_DATE    DATE DEFAULT ADD_MONTHS(SYSDATE, 12) NOT NULL,
    ACC_EXP_YN    CHAR(1) DEFAULT 'N' NOT NULL,
    ACC_SECESSION_DATETIME    DATE,
    ACC_SECESSION_YN    CHAR(1) DEFAULT 'N' NOT NULL
);


CREATE TABLE TBL_MEMBER_ROLE
(
    MEMBER_NO    NUMBER NOT NULL,
    AUTHORITY_CODE    NUMBER NOT NULL
);

-- INDEX CREATE

DROP INDEX IND_TBL_AUTHENTICATED_MENU;

CREATE UNIQUE INDEX IND_TBL_AUTHENTICATED_MENU ON TBL_AUTHENTICATED_MENU
    ( AUTHORITY_CODE,MENU_CODE );


DROP INDEX IND_TBL_AUTHORITY;

CREATE UNIQUE INDEX IND_TBL_AUTHORITY ON TBL_AUTHORITY
    ( AUTHORITY_CODE );


DROP INDEX IND_TBL_CHANGED_PWD_LOG;

CREATE UNIQUE INDEX IND_TBL_CHANGED_PWD_LOG ON TBL_CHANGED_PWD_LOG
    ( CHANGED_PWD_LOG_NO );


DROP INDEX IND_TBL_GLOBAL_MENU;

CREATE UNIQUE INDEX IND_TBL_GLOBAL_MENU ON TBL_GLOBAL_MENU
    ( MENU_CODE );


DROP INDEX IND_TBL_LOGIN_FAILED_LOG;

CREATE UNIQUE INDEX IND_TBL_LOGIN_FAILED_LOG ON TBL_LOGIN_FAILED_LOG
    ( LOGIN_FAILED_LOG_NO );


DROP INDEX IND_TBL_LOGIN_LOG;

CREATE UNIQUE INDEX IND_TBL_LOGIN_LOG ON TBL_LOGIN_LOG
    ( LOGIN_LOG_NO );


DROP INDEX IND_TBL_MEMBER;

CREATE UNIQUE INDEX IND_TBL_MEMBER ON TBL_MEMBER
    ( MEMBER_NO );


DROP INDEX IND_TBL_MEMBER_ROLE;

CREATE UNIQUE INDEX IND_TBL_MEMBER_ROLE ON TBL_MEMBER_ROLE
    ( MEMBER_NO,AUTHORITY_CODE );


-- ADD CONSTRAINT
-- PK
ALTER TABLE TBL_AUTHENTICATED_MENU
    ADD CONSTRAINT PK_AUTHORITY_MENU PRIMARY KEY ( AUTHORITY_CODE,MENU_CODE )
    USING INDEX IND_TBL_AUTHENTICATED_MENU;

ALTER TABLE TBL_AUTHORITY
    ADD CONSTRAINT PK_AUTHORITY_CODE PRIMARY KEY ( AUTHORITY_CODE )
    USING INDEX IND_TBL_AUTHORITY;

ALTER TABLE TBL_CHANGED_PWD_LOG
    ADD CONSTRAINT PK_CHANGED_PWD_LOG_NO PRIMARY KEY ( CHANGED_PWD_LOG_NO )
    USING INDEX IND_TBL_CHANGED_PWD_LOG;

ALTER TABLE TBL_GLOBAL_MENU
    ADD CONSTRAINT PK_MENU_CODE1 PRIMARY KEY ( MENU_CODE )
    USING INDEX IND_TBL_GLOBAL_MENU;

ALTER TABLE TBL_LOGIN_FAILED_LOG
    ADD CONSTRAINT PK_LOGIN_FAILED_LOG_NO PRIMARY KEY ( LOGIN_FAILED_LOG_NO )
    USING INDEX IND_TBL_LOGIN_FAILED_LOG;

ALTER TABLE TBL_LOGIN_LOG
    ADD CONSTRAINT PK_LOGIN_LOG_NO PRIMARY KEY ( LOGIN_LOG_NO )
    USING INDEX IND_TBL_LOGIN_LOG;

ALTER TABLE TBL_MEMBER
    ADD CONSTRAINT PK_MEMBER_NO PRIMARY KEY ( MEMBER_NO )
    USING INDEX IND_TBL_MEMBER;

ALTER TABLE TBL_MEMBER_ROLE
    ADD CONSTRAINT PK_MEMBER_AUTHORITY PRIMARY KEY ( MEMBER_NO,AUTHORITY_CODE )
    USING INDEX IND_TBL_MEMBER_ROLE;


-- FK

ALTER TABLE TBL_AUTHENTICATED_MENU
    ADD CONSTRAINT FK_TBL_AUTHENTICATED_MENU1 FOREIGN KEY ( AUTHORITY_CODE )
        REFERENCES TBL_AUTHORITY (AUTHORITY_CODE );

ALTER TABLE TBL_AUTHENTICATED_MENU
    ADD CONSTRAINT FK_TBL_AUTHENTICATED_MENU2 FOREIGN KEY ( MENU_CODE )
        REFERENCES TBL_GLOBAL_MENU (MENU_CODE );

ALTER TABLE TBL_CHANGED_PWD_LOG
    ADD CONSTRAINT FK_TBL_CHANGED_PWD_LOG FOREIGN KEY ( MEMBER_NO )
        REFERENCES TBL_MEMBER (MEMBER_NO );

ALTER TABLE TBL_GLOBAL_MENU
    ADD CONSTRAINT FK_TBL_GLOBAL_MENU FOREIGN KEY ( REF_MENU_CODE )
        REFERENCES TBL_GLOBAL_MENU (MENU_CODE );

ALTER TABLE TBL_LOGIN_FAILED_LOG
    ADD CONSTRAINT FK_TBL_LOGIN_FAILED_LOG FOREIGN KEY ( MEMBER_NO )
        REFERENCES TBL_MEMBER (MEMBER_NO );

ALTER TABLE TBL_LOGIN_LOG
    ADD CONSTRAINT FK_TBL_LOGIN_LOG FOREIGN KEY ( MEMBER_NO )
        REFERENCES TBL_MEMBER (MEMBER_NO );

ALTER TABLE TBL_MEMBER_ROLE
    ADD CONSTRAINT FK_TBL_MEMBER_ROLE1 FOREIGN KEY ( MEMBER_NO )
        REFERENCES TBL_MEMBER (MEMBER_NO );

ALTER TABLE TBL_MEMBER_ROLE
    ADD CONSTRAINT FK_TBL_MEMBER_ROLE2 FOREIGN KEY ( AUTHORITY_CODE )
        REFERENCES TBL_AUTHORITY (AUTHORITY_CODE );


-- CHECK

ALTER TABLE TBL_GLOBAL_MENU
    ADD CONSTRAINT CK_REMOVED_YN CHECK ( REMOVED_YN IN ('Y','N') );

ALTER TABLE TBL_GLOBAL_MENU
    ADD CONSTRAINT CK_MENU_TYPE CHECK ( MENU_TYPE IN (1,2) );



ALTER TABLE TBL_MEMBER
    ADD CONSTRAINT CK_ACC_SECESSION_YN CHECK ( ACC_SECESSION_YN IN ('Y','N') );

ALTER TABLE TBL_MEMBER
    ADD CONSTRAINT CK_ACC_EXP_YN CHECK ( ACC_EXP_YN IN ('Y','N') );

ALTER TABLE TBL_MEMBER
    ADD CONSTRAINT CK_TEMP_PWD_YN CHECK ( TEMP_PWD_YN IN ('Y','N') );

ALTER TABLE TBL_MEMBER
    ADD CONSTRAINT CK_ACC_LOCK_YN CHECK ( ACC_LOCK_YN IN ('Y','N') );

ALTER TABLE TBL_MEMBER
    ADD CONSTRAINT CK_ACC_INACTIVE_YN CHECK ( ACC_INACTIVE_YN IN ('Y','N') );

-- COMMENT
COMMENT ON COLUMN TBL_AUTHENTICATED_MENU.AUTHORITY_CODE IS '권한코드';
COMMENT ON COLUMN TBL_AUTHENTICATED_MENU.MENU_CODE IS '메뉴코드';
COMMENT ON TABLE TBL_AUTHENTICATED_MENU IS '권한별접근가능메뉴';

COMMENT ON COLUMN TBL_AUTHORITY.AUTHORITY_CODE IS '권한코드';
COMMENT ON COLUMN TBL_AUTHORITY.AUTHORITY_NAME IS '권한명';
COMMENT ON COLUMN TBL_AUTHORITY.AUTHORITY_DESC IS '권한설명';
COMMENT ON TABLE TBL_AUTHORITY IS '권한';

COMMENT ON COLUMN TBL_CHANGED_PWD_LOG.CHANGED_PWD_LOG_NO IS '비밀번호변경이력번호';
COMMENT ON COLUMN TBL_CHANGED_PWD_LOG.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_CHANGED_PWD_LOG.BEFORE_CHANGED_PWD IS '변경전비밀번호';
COMMENT ON COLUMN TBL_CHANGED_PWD_LOG.CHANGED_PWD_DATE IS '변경일자';
COMMENT ON TABLE TBL_CHANGED_PWD_LOG IS '비밀번호변경이력';

COMMENT ON COLUMN TBL_GLOBAL_MENU.MENU_CODE IS '메뉴코드';
COMMENT ON COLUMN TBL_GLOBAL_MENU.MENU_NAME IS '메뉴명';
COMMENT ON COLUMN TBL_GLOBAL_MENU.MENU_URL IS '메뉴URL';
COMMENT ON COLUMN TBL_GLOBAL_MENU.MENU_DESC IS '메뉴설명';
COMMENT ON COLUMN TBL_GLOBAL_MENU.MENU_ORDER IS '출력순서';
COMMENT ON COLUMN TBL_GLOBAL_MENU.REMOVED_YN IS '삭제여부';
COMMENT ON COLUMN TBL_GLOBAL_MENU.MENU_TYPE IS '구분';
COMMENT ON COLUMN TBL_GLOBAL_MENU.REF_MENU_CODE IS '상위메뉴코드';
COMMENT ON TABLE TBL_GLOBAL_MENU IS '공통메뉴';

COMMENT ON COLUMN TBL_LOGIN_FAILED_LOG.LOGIN_FAILED_LOG_NO IS '회원로그인실패이력번호';
COMMENT ON COLUMN TBL_LOGIN_FAILED_LOG.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_LOGIN_FAILED_LOG.LOGIN_FAILED_DATETIME IS '로그인실패일시';
COMMENT ON COLUMN TBL_LOGIN_FAILED_LOG.LOGIN_TRIED_IP IS '로그인시도IP';
COMMENT ON COLUMN TBL_LOGIN_FAILED_LOG.LOGIN_FAILED_REASON IS '로그인실패사유';
COMMENT ON TABLE TBL_LOGIN_FAILED_LOG IS '회원로그인실패이력';

COMMENT ON COLUMN TBL_LOGIN_LOG.LOGIN_LOG_NO IS '회원로그인이력번호';
COMMENT ON COLUMN TBL_LOGIN_LOG.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_LOGIN_LOG.LOGIN_DATETIME IS '로그인일시';
COMMENT ON COLUMN TBL_LOGIN_LOG.LOGIN_IP IS '로그인IP';
COMMENT ON COLUMN TBL_LOGIN_LOG.REFERER_URL IS '이전페이지주소';
COMMENT ON TABLE TBL_LOGIN_LOG IS '회원로그인이력';

COMMENT ON COLUMN TBL_MEMBER.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_ID IS '회원아이디';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_PWD IS '회원비밀번호';
COMMENT ON COLUMN TBL_MEMBER.TEMP_PWD_YN IS '임시비밀번호여부';
COMMENT ON COLUMN TBL_MEMBER.PWD_CHANGED_DATETIME IS '회원비밀번호변경일시';
COMMENT ON COLUMN TBL_MEMBER.PWD_EXP_DATE IS '회원비밀번호만료일자';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_NAME IS '회원이름';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_REGIST_DATETIME IS '회원가입일시';
COMMENT ON COLUMN TBL_MEMBER.ACCUM_LOGIN_COUNT IS '누적로그인횟수';
COMMENT ON COLUMN TBL_MEMBER.LOGIN_FAILED_COUNT IS '로그인연속실패횟수';
COMMENT ON COLUMN TBL_MEMBER.ACC_LOCK_YN IS '계정잠금여부';
COMMENT ON COLUMN TBL_MEMBER.ACC_INACTIVE_YN IS '계정비활성화여부';
COMMENT ON COLUMN TBL_MEMBER.ACC_EXP_DATE IS '계정만료일자';
COMMENT ON COLUMN TBL_MEMBER.ACC_EXP_YN IS '계정만료여부';
COMMENT ON COLUMN TBL_MEMBER.ACC_SECESSION_DATETIME IS '계정탈퇴일시';
COMMENT ON COLUMN TBL_MEMBER.ACC_SECESSION_YN IS '계정탈퇴여부';
COMMENT ON TABLE TBL_MEMBER IS '회원';

COMMENT ON COLUMN TBL_MEMBER_ROLE.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_MEMBER_ROLE.AUTHORITY_CODE IS '권한코드';
COMMENT ON TABLE TBL_MEMBER_ROLE IS '회원별권한';


INSERT INTO TBL_MEMBER (MEMBER_NO, MEMBER_ID, MEMBER_PWD, MEMBER_NAME)
VALUES (SEQ_MEMBER_NO.NEXTVAL, 'admin', '$2a$10$VykXqWfk8QJhkdvFIDy4JOkXK/z/CjTFQh2AGRZOCo1JiOtsNNlRO',  '관리자');
INSERT INTO TBL_MEMBER (MEMBER_NO, MEMBER_ID, MEMBER_PWD, MEMBER_NAME)
VALUES (SEQ_MEMBER_NO.NEXTVAL, 'user01', '$2a$10$Rb4mb05kSDXbyPbt4b7/xOVG8rib7vhpwRZ3/IBUReLMxffVzQQUW',  '홍길동');

SELECT * FROM TBL_MEMBER;


INSERT INTO TBL_AUTHORITY (AUTHORITY_CODE, AUTHORITY_NAME, AUTHORITY_DESC) VALUES (SEQ_AUTHORITY_CODE.NEXTVAL, 'ROLE_ADMIN', '모든 권한을 가진 슈퍼 관리자 권한');
INSERT INTO TBL_AUTHORITY (AUTHORITY_CODE, AUTHORITY_NAME, AUTHORITY_DESC) VALUES (SEQ_AUTHORITY_CODE.NEXTVAL, 'ROLE_MEMBER', '관리자 권한 없이 사용자 권한을 가지는 권한');


INSERT INTO TBL_GLOBAL_MENU (MENU_CODE, MENU_NAME, MENU_URL, MENU_DESC, MENU_ORDER, MENU_TYPE) VALUES (SEQ_MENU_CODE.NEXTVAL, '로그인', '/member/login', '회원 로그인 요청 메뉴', '0', '1');
INSERT INTO TBL_GLOBAL_MENU (MENU_CODE, MENU_NAME, MENU_URL, MENU_DESC, MENU_ORDER, MENU_TYPE) VALUES (SEQ_MENU_CODE.NEXTVAL, '로그아웃', '/member/logout', '회원 로그아웃 요청 메뉴', '0', '1');
INSERT INTO TBL_GLOBAL_MENU (MENU_CODE, MENU_NAME, MENU_URL, MENU_DESC, MENU_ORDER, MENU_TYPE) VALUES (SEQ_MENU_CODE.NEXTVAL, '메뉴목록조회', '/menu/list', '전체 메뉴를 조회하는 메뉴', '0', '1');
INSERT INTO TBL_GLOBAL_MENU (MENU_CODE, MENU_NAME, MENU_URL, MENU_DESC, MENU_ORDER, MENU_TYPE) VALUES (SEQ_MENU_CODE.NEXTVAL, '주문하기', '/order/regist', '음식 주문하기 메뉴', '0', '1');
INSERT INTO TBL_GLOBAL_MENU (MENU_CODE, MENU_NAME, MENU_URL, MENU_DESC, MENU_ORDER, MENU_TYPE) VALUES (SEQ_MENU_CODE.NEXTVAL, '관리자대쉬보드', '/admin/dashboard', '관리자 대쉬보드 메뉴', '0', '1');

INSERT INTO TBL_AUTHENTICATED_MENU (AUTHORITY_CODE, MENU_CODE) VALUES ('1', '2');
INSERT INTO TBL_AUTHENTICATED_MENU (AUTHORITY_CODE, MENU_CODE) VALUES ('1', '1');
INSERT INTO TBL_AUTHENTICATED_MENU (AUTHORITY_CODE, MENU_CODE) VALUES ('2', '1');

INSERT INTO TBL_MEMBER_ROLE (MEMBER_NO, AUTHORITY_CODE) VALUES ('1', '1');
INSERT INTO TBL_MEMBER_ROLE (MEMBER_NO, AUTHORITY_CODE) VALUES ('2', '2');


COMMIT;



